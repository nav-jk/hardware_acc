-- ==============================================================
-- Generated by Vitis HLS v2025.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity winograd is
generic (
    C_M_AXI_GMEM_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BUSER_WIDTH-1 downto 0);
    s_axi_CTRL_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_WVALID : IN STD_LOGIC;
    s_axi_CTRL_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_RREADY : IN STD_LOGIC;
    s_axi_CTRL_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_BREADY : IN STD_LOGIC;
    s_axi_CTRL_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of winograd is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "winograd_winograd,hls_ip_2025_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu440_CIV-flgb2377-1-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=96,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=6393,HLS_SYN_LUT=4539,HLS_VERSION=2025_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (63 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (63 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (63 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (63 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (63 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (63 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (63 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (63 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (63 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (63 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant C_M_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F000000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111000000000000000000000000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal in_g : STD_LOGIC_VECTOR (63 downto 0);
    signal in_d : STD_LOGIC_VECTOR (63 downto 0);
    signal out_y : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal gmem_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal gmem_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal gmem_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal grp_fu_281_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_323 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal grp_winograd_Pipeline_read_d_fu_250_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal grp_fu_285_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_331 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal grp_fu_289_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_342 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_308_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_351 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal grp_fu_313_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_361 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_370 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal grp_fu_293_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_376 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_383 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_389 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_395 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_401 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_318_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_408 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln_reg_814 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln1_reg_820 : STD_LOGIC_VECTOR (61 downto 0);
    signal gmem_addr_2_reg_826 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub1_reg_897 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_297_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub160_2_reg_903 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_301_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add170_2_reg_909 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_2_reg_916 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub131_1_reg_923 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub209_1_reg_928 : STD_LOGIC_VECTOR (31 downto 0);
    signal add230_1_reg_933 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul266_1_reg_938 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln93_1_fu_592_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal bitcast_ln93_3_fu_627_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_ap_start : STD_LOGIC;
    signal grp_winograd_Pipeline_read_g_fu_234_ap_done : STD_LOGIC;
    signal grp_winograd_Pipeline_read_g_fu_234_ap_idle : STD_LOGIC;
    signal grp_winograd_Pipeline_read_g_fu_234_ap_ready : STD_LOGIC;
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_AWVALID : STD_LOGIC;
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_WVALID : STD_LOGIC;
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_WLAST : STD_LOGIC;
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARVALID : STD_LOGIC;
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_RREADY : STD_LOGIC;
    signal grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_BREADY : STD_LOGIC;
    signal grp_winograd_Pipeline_read_g_fu_234_g_load_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_g_load_out_ap_vld : STD_LOGIC;
    signal grp_winograd_Pipeline_read_g_fu_234_g_1_load_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_g_1_load_out_ap_vld : STD_LOGIC;
    signal grp_winograd_Pipeline_read_g_fu_234_g_2_load_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_g_2_load_out_ap_vld : STD_LOGIC;
    signal grp_winograd_Pipeline_read_g_fu_234_g_3_load_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_g_3_load_out_ap_vld : STD_LOGIC;
    signal grp_winograd_Pipeline_read_g_fu_234_g_4_load_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_g_4_load_out_ap_vld : STD_LOGIC;
    signal grp_winograd_Pipeline_read_g_fu_234_g_5_load_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_g_5_load_out_ap_vld : STD_LOGIC;
    signal grp_winograd_Pipeline_read_g_fu_234_g_6_load_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_g_6_load_out_ap_vld : STD_LOGIC;
    signal grp_winograd_Pipeline_read_g_fu_234_g_7_load_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_g_7_load_out_ap_vld : STD_LOGIC;
    signal grp_winograd_Pipeline_read_g_fu_234_g_8_load_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_g_fu_234_g_8_load_out_ap_vld : STD_LOGIC;
    signal grp_winograd_Pipeline_read_d_fu_250_ap_start : STD_LOGIC;
    signal grp_winograd_Pipeline_read_d_fu_250_ap_idle : STD_LOGIC;
    signal grp_winograd_Pipeline_read_d_fu_250_ap_ready : STD_LOGIC;
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_AWVALID : STD_LOGIC;
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_WVALID : STD_LOGIC;
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_WLAST : STD_LOGIC;
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARVALID : STD_LOGIC;
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_RREADY : STD_LOGIC;
    signal grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_BREADY : STD_LOGIC;
    signal grp_winograd_Pipeline_read_d_fu_250_d_load_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_d_load_out_ap_vld : STD_LOGIC;
    signal grp_winograd_Pipeline_read_d_fu_250_d_1_load_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_d_1_load_out_ap_vld : STD_LOGIC;
    signal grp_winograd_Pipeline_read_d_fu_250_d_2_load_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_d_2_load_out_ap_vld : STD_LOGIC;
    signal grp_winograd_Pipeline_read_d_fu_250_d_3_load_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_d_3_load_out_ap_vld : STD_LOGIC;
    signal grp_winograd_Pipeline_read_d_fu_250_d_4_load_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_d_4_load_out_ap_vld : STD_LOGIC;
    signal grp_winograd_Pipeline_read_d_fu_250_d_5_load_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_d_5_load_out_ap_vld : STD_LOGIC;
    signal grp_winograd_Pipeline_read_d_fu_250_d_6_load_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_d_6_load_out_ap_vld : STD_LOGIC;
    signal grp_winograd_Pipeline_read_d_fu_250_d_7_load_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_d_7_load_out_ap_vld : STD_LOGIC;
    signal grp_winograd_Pipeline_read_d_fu_250_d_8_load_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_d_8_load_out_ap_vld : STD_LOGIC;
    signal grp_winograd_Pipeline_read_d_fu_250_d_9_load_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_d_9_load_out_ap_vld : STD_LOGIC;
    signal grp_winograd_Pipeline_read_d_fu_250_d_10_load_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_d_10_load_out_ap_vld : STD_LOGIC;
    signal grp_winograd_Pipeline_read_d_fu_250_d_11_load_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_read_d_fu_250_d_11_load_out_ap_vld : STD_LOGIC;
    signal grp_winograd_Pipeline_compute_Y_fu_269_ap_start : STD_LOGIC;
    signal grp_winograd_Pipeline_compute_Y_fu_269_ap_done : STD_LOGIC;
    signal grp_winograd_Pipeline_compute_Y_fu_269_ap_idle : STD_LOGIC;
    signal grp_winograd_Pipeline_compute_Y_fu_269_ap_ready : STD_LOGIC;
    signal grp_winograd_Pipeline_compute_Y_fu_269_p_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_compute_Y_fu_269_p_out_ap_vld : STD_LOGIC;
    signal grp_winograd_Pipeline_compute_Y_fu_269_p_out1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_compute_Y_fu_269_p_out1_ap_vld : STD_LOGIC;
    signal grp_winograd_Pipeline_compute_Y_fu_269_p_out2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_compute_Y_fu_269_p_out2_ap_vld : STD_LOGIC;
    signal grp_winograd_Pipeline_compute_Y_fu_269_p_out3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_winograd_Pipeline_compute_Y_fu_269_p_out3_ap_vld : STD_LOGIC;
    signal gmem_0_AWVALID : STD_LOGIC;
    signal gmem_0_AWREADY : STD_LOGIC;
    signal gmem_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_0_WVALID : STD_LOGIC;
    signal gmem_0_WREADY : STD_LOGIC;
    signal gmem_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_0_ARVALID : STD_LOGIC;
    signal gmem_0_ARREADY : STD_LOGIC;
    signal gmem_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_0_RVALID : STD_LOGIC;
    signal gmem_0_RREADY : STD_LOGIC;
    signal gmem_0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_0_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem_0_BVALID : STD_LOGIC;
    signal gmem_0_BREADY : STD_LOGIC;
    signal grp_winograd_Pipeline_read_g_fu_234_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm_state10 : STD_LOGIC;
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_winograd_Pipeline_read_d_fu_250_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_NS_fsm_state20 : STD_LOGIC;
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_winograd_Pipeline_compute_Y_fu_269_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal sext_ln127_fu_444_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln34_fu_454_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln45_fu_480_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln127_fu_635_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln127_1_fu_643_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln127_2_fu_651_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln127_3_fu_659_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal grp_fu_281_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_281_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal grp_fu_285_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_285_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_289_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_289_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_293_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_293_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_297_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_297_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_308_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_308_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal grp_fu_313_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_313_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_318_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_318_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln2_fu_434_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal bitcast_ln93_fu_562_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bit_sel1_fu_566_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln93_2_fu_574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln93_fu_580_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal xor_ln_fu_584_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln93_2_fu_597_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bit_sel_fu_601_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln93_fu_609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln93_1_fu_615_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal xor_ln93_1_fu_619_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_281_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_281_ce : STD_LOGIC;
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal grp_fu_285_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_285_ce : STD_LOGIC;
    signal grp_fu_289_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_289_ce : STD_LOGIC;
    signal grp_fu_293_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component winograd_winograd_Pipeline_read_g IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem_0_WREADY : IN STD_LOGIC;
        m_axi_gmem_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_RVALID : IN STD_LOGIC;
        m_axi_gmem_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_0_RLAST : IN STD_LOGIC;
        m_axi_gmem_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_BVALID : IN STD_LOGIC;
        m_axi_gmem_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln34 : IN STD_LOGIC_VECTOR (61 downto 0);
        g_load_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        g_load_out_ap_vld : OUT STD_LOGIC;
        g_1_load_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        g_1_load_out_ap_vld : OUT STD_LOGIC;
        g_2_load_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        g_2_load_out_ap_vld : OUT STD_LOGIC;
        g_3_load_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        g_3_load_out_ap_vld : OUT STD_LOGIC;
        g_4_load_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        g_4_load_out_ap_vld : OUT STD_LOGIC;
        g_5_load_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        g_5_load_out_ap_vld : OUT STD_LOGIC;
        g_6_load_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        g_6_load_out_ap_vld : OUT STD_LOGIC;
        g_7_load_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        g_7_load_out_ap_vld : OUT STD_LOGIC;
        g_8_load_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        g_8_load_out_ap_vld : OUT STD_LOGIC );
    end component;


    component winograd_winograd_Pipeline_read_d IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem_0_WREADY : IN STD_LOGIC;
        m_axi_gmem_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_RVALID : IN STD_LOGIC;
        m_axi_gmem_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_0_RLAST : IN STD_LOGIC;
        m_axi_gmem_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_BVALID : IN STD_LOGIC;
        m_axi_gmem_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln45 : IN STD_LOGIC_VECTOR (61 downto 0);
        d_load_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        d_load_out_ap_vld : OUT STD_LOGIC;
        d_1_load_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        d_1_load_out_ap_vld : OUT STD_LOGIC;
        d_2_load_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        d_2_load_out_ap_vld : OUT STD_LOGIC;
        d_3_load_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        d_3_load_out_ap_vld : OUT STD_LOGIC;
        d_4_load_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        d_4_load_out_ap_vld : OUT STD_LOGIC;
        d_5_load_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        d_5_load_out_ap_vld : OUT STD_LOGIC;
        d_6_load_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        d_6_load_out_ap_vld : OUT STD_LOGIC;
        d_7_load_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        d_7_load_out_ap_vld : OUT STD_LOGIC;
        d_8_load_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        d_8_load_out_ap_vld : OUT STD_LOGIC;
        d_9_load_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        d_9_load_out_ap_vld : OUT STD_LOGIC;
        d_10_load_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        d_10_load_out_ap_vld : OUT STD_LOGIC;
        d_11_load_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        d_11_load_out_ap_vld : OUT STD_LOGIC );
    end component;


    component winograd_winograd_Pipeline_compute_Y IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sub7 : IN STD_LOGIC_VECTOR (31 downto 0);
        add10 : IN STD_LOGIC_VECTOR (31 downto 0);
        sub5 : IN STD_LOGIC_VECTOR (31 downto 0);
        add8 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_out_ap_vld : OUT STD_LOGIC;
        p_out1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_out1_ap_vld : OUT STD_LOGIC;
        p_out2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_out2_ap_vld : OUT STD_LOGIC;
        p_out3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_out3_ap_vld : OUT STD_LOGIC );
    end component;


    component winograd_faddfsub_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component winograd_fsub_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component winograd_fadd_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component winograd_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component winograd_CTRL_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        in_g : OUT STD_LOGIC_VECTOR (63 downto 0);
        in_d : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_y : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component winograd_gmem_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_NUM_READ_OUTSTANDING : INTEGER;
        CH0_NUM_WRITE_OUTSTANDING : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;



begin
    grp_winograd_Pipeline_read_g_fu_234 : component winograd_winograd_Pipeline_read_g
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_winograd_Pipeline_read_g_fu_234_ap_start,
        ap_done => grp_winograd_Pipeline_read_g_fu_234_ap_done,
        ap_idle => grp_winograd_Pipeline_read_g_fu_234_ap_idle,
        ap_ready => grp_winograd_Pipeline_read_g_fu_234_ap_ready,
        m_axi_gmem_0_AWVALID => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_AWVALID,
        m_axi_gmem_0_AWREADY => ap_const_logic_0,
        m_axi_gmem_0_AWADDR => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_AWADDR,
        m_axi_gmem_0_AWID => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_AWID,
        m_axi_gmem_0_AWLEN => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_AWLEN,
        m_axi_gmem_0_AWSIZE => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_AWSIZE,
        m_axi_gmem_0_AWBURST => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_AWBURST,
        m_axi_gmem_0_AWLOCK => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_AWLOCK,
        m_axi_gmem_0_AWCACHE => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_AWCACHE,
        m_axi_gmem_0_AWPROT => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_AWPROT,
        m_axi_gmem_0_AWQOS => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_AWQOS,
        m_axi_gmem_0_AWREGION => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_AWREGION,
        m_axi_gmem_0_AWUSER => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_AWUSER,
        m_axi_gmem_0_WVALID => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_WVALID,
        m_axi_gmem_0_WREADY => ap_const_logic_0,
        m_axi_gmem_0_WDATA => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_WDATA,
        m_axi_gmem_0_WSTRB => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_WSTRB,
        m_axi_gmem_0_WLAST => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_WLAST,
        m_axi_gmem_0_WID => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_WID,
        m_axi_gmem_0_WUSER => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_WUSER,
        m_axi_gmem_0_ARVALID => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARVALID,
        m_axi_gmem_0_ARREADY => gmem_0_ARREADY,
        m_axi_gmem_0_ARADDR => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARADDR,
        m_axi_gmem_0_ARID => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARID,
        m_axi_gmem_0_ARLEN => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARLEN,
        m_axi_gmem_0_ARSIZE => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARSIZE,
        m_axi_gmem_0_ARBURST => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARBURST,
        m_axi_gmem_0_ARLOCK => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARLOCK,
        m_axi_gmem_0_ARCACHE => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARCACHE,
        m_axi_gmem_0_ARPROT => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARPROT,
        m_axi_gmem_0_ARQOS => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARQOS,
        m_axi_gmem_0_ARREGION => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARREGION,
        m_axi_gmem_0_ARUSER => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARUSER,
        m_axi_gmem_0_RVALID => gmem_0_RVALID,
        m_axi_gmem_0_RREADY => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_RREADY,
        m_axi_gmem_0_RDATA => gmem_0_RDATA,
        m_axi_gmem_0_RLAST => ap_const_logic_0,
        m_axi_gmem_0_RID => ap_const_lv1_0,
        m_axi_gmem_0_RFIFONUM => gmem_0_RFIFONUM,
        m_axi_gmem_0_RUSER => ap_const_lv1_0,
        m_axi_gmem_0_RRESP => ap_const_lv2_0,
        m_axi_gmem_0_BVALID => ap_const_logic_0,
        m_axi_gmem_0_BREADY => grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_BREADY,
        m_axi_gmem_0_BRESP => ap_const_lv2_0,
        m_axi_gmem_0_BID => ap_const_lv1_0,
        m_axi_gmem_0_BUSER => ap_const_lv1_0,
        sext_ln34 => trunc_ln_reg_814,
        g_load_out => grp_winograd_Pipeline_read_g_fu_234_g_load_out,
        g_load_out_ap_vld => grp_winograd_Pipeline_read_g_fu_234_g_load_out_ap_vld,
        g_1_load_out => grp_winograd_Pipeline_read_g_fu_234_g_1_load_out,
        g_1_load_out_ap_vld => grp_winograd_Pipeline_read_g_fu_234_g_1_load_out_ap_vld,
        g_2_load_out => grp_winograd_Pipeline_read_g_fu_234_g_2_load_out,
        g_2_load_out_ap_vld => grp_winograd_Pipeline_read_g_fu_234_g_2_load_out_ap_vld,
        g_3_load_out => grp_winograd_Pipeline_read_g_fu_234_g_3_load_out,
        g_3_load_out_ap_vld => grp_winograd_Pipeline_read_g_fu_234_g_3_load_out_ap_vld,
        g_4_load_out => grp_winograd_Pipeline_read_g_fu_234_g_4_load_out,
        g_4_load_out_ap_vld => grp_winograd_Pipeline_read_g_fu_234_g_4_load_out_ap_vld,
        g_5_load_out => grp_winograd_Pipeline_read_g_fu_234_g_5_load_out,
        g_5_load_out_ap_vld => grp_winograd_Pipeline_read_g_fu_234_g_5_load_out_ap_vld,
        g_6_load_out => grp_winograd_Pipeline_read_g_fu_234_g_6_load_out,
        g_6_load_out_ap_vld => grp_winograd_Pipeline_read_g_fu_234_g_6_load_out_ap_vld,
        g_7_load_out => grp_winograd_Pipeline_read_g_fu_234_g_7_load_out,
        g_7_load_out_ap_vld => grp_winograd_Pipeline_read_g_fu_234_g_7_load_out_ap_vld,
        g_8_load_out => grp_winograd_Pipeline_read_g_fu_234_g_8_load_out,
        g_8_load_out_ap_vld => grp_winograd_Pipeline_read_g_fu_234_g_8_load_out_ap_vld);

    grp_winograd_Pipeline_read_d_fu_250 : component winograd_winograd_Pipeline_read_d
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_winograd_Pipeline_read_d_fu_250_ap_start,
        ap_done => grp_winograd_Pipeline_read_d_fu_250_ap_done,
        ap_idle => grp_winograd_Pipeline_read_d_fu_250_ap_idle,
        ap_ready => grp_winograd_Pipeline_read_d_fu_250_ap_ready,
        m_axi_gmem_0_AWVALID => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_AWVALID,
        m_axi_gmem_0_AWREADY => ap_const_logic_0,
        m_axi_gmem_0_AWADDR => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_AWADDR,
        m_axi_gmem_0_AWID => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_AWID,
        m_axi_gmem_0_AWLEN => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_AWLEN,
        m_axi_gmem_0_AWSIZE => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_AWSIZE,
        m_axi_gmem_0_AWBURST => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_AWBURST,
        m_axi_gmem_0_AWLOCK => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_AWLOCK,
        m_axi_gmem_0_AWCACHE => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_AWCACHE,
        m_axi_gmem_0_AWPROT => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_AWPROT,
        m_axi_gmem_0_AWQOS => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_AWQOS,
        m_axi_gmem_0_AWREGION => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_AWREGION,
        m_axi_gmem_0_AWUSER => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_AWUSER,
        m_axi_gmem_0_WVALID => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_WVALID,
        m_axi_gmem_0_WREADY => ap_const_logic_0,
        m_axi_gmem_0_WDATA => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_WDATA,
        m_axi_gmem_0_WSTRB => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_WSTRB,
        m_axi_gmem_0_WLAST => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_WLAST,
        m_axi_gmem_0_WID => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_WID,
        m_axi_gmem_0_WUSER => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_WUSER,
        m_axi_gmem_0_ARVALID => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARVALID,
        m_axi_gmem_0_ARREADY => gmem_0_ARREADY,
        m_axi_gmem_0_ARADDR => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARADDR,
        m_axi_gmem_0_ARID => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARID,
        m_axi_gmem_0_ARLEN => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARLEN,
        m_axi_gmem_0_ARSIZE => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARSIZE,
        m_axi_gmem_0_ARBURST => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARBURST,
        m_axi_gmem_0_ARLOCK => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARLOCK,
        m_axi_gmem_0_ARCACHE => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARCACHE,
        m_axi_gmem_0_ARPROT => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARPROT,
        m_axi_gmem_0_ARQOS => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARQOS,
        m_axi_gmem_0_ARREGION => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARREGION,
        m_axi_gmem_0_ARUSER => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARUSER,
        m_axi_gmem_0_RVALID => gmem_0_RVALID,
        m_axi_gmem_0_RREADY => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_RREADY,
        m_axi_gmem_0_RDATA => gmem_0_RDATA,
        m_axi_gmem_0_RLAST => ap_const_logic_0,
        m_axi_gmem_0_RID => ap_const_lv1_0,
        m_axi_gmem_0_RFIFONUM => gmem_0_RFIFONUM,
        m_axi_gmem_0_RUSER => ap_const_lv1_0,
        m_axi_gmem_0_RRESP => ap_const_lv2_0,
        m_axi_gmem_0_BVALID => ap_const_logic_0,
        m_axi_gmem_0_BREADY => grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_BREADY,
        m_axi_gmem_0_BRESP => ap_const_lv2_0,
        m_axi_gmem_0_BID => ap_const_lv1_0,
        m_axi_gmem_0_BUSER => ap_const_lv1_0,
        sext_ln45 => trunc_ln1_reg_820,
        d_load_out => grp_winograd_Pipeline_read_d_fu_250_d_load_out,
        d_load_out_ap_vld => grp_winograd_Pipeline_read_d_fu_250_d_load_out_ap_vld,
        d_1_load_out => grp_winograd_Pipeline_read_d_fu_250_d_1_load_out,
        d_1_load_out_ap_vld => grp_winograd_Pipeline_read_d_fu_250_d_1_load_out_ap_vld,
        d_2_load_out => grp_winograd_Pipeline_read_d_fu_250_d_2_load_out,
        d_2_load_out_ap_vld => grp_winograd_Pipeline_read_d_fu_250_d_2_load_out_ap_vld,
        d_3_load_out => grp_winograd_Pipeline_read_d_fu_250_d_3_load_out,
        d_3_load_out_ap_vld => grp_winograd_Pipeline_read_d_fu_250_d_3_load_out_ap_vld,
        d_4_load_out => grp_winograd_Pipeline_read_d_fu_250_d_4_load_out,
        d_4_load_out_ap_vld => grp_winograd_Pipeline_read_d_fu_250_d_4_load_out_ap_vld,
        d_5_load_out => grp_winograd_Pipeline_read_d_fu_250_d_5_load_out,
        d_5_load_out_ap_vld => grp_winograd_Pipeline_read_d_fu_250_d_5_load_out_ap_vld,
        d_6_load_out => grp_winograd_Pipeline_read_d_fu_250_d_6_load_out,
        d_6_load_out_ap_vld => grp_winograd_Pipeline_read_d_fu_250_d_6_load_out_ap_vld,
        d_7_load_out => grp_winograd_Pipeline_read_d_fu_250_d_7_load_out,
        d_7_load_out_ap_vld => grp_winograd_Pipeline_read_d_fu_250_d_7_load_out_ap_vld,
        d_8_load_out => grp_winograd_Pipeline_read_d_fu_250_d_8_load_out,
        d_8_load_out_ap_vld => grp_winograd_Pipeline_read_d_fu_250_d_8_load_out_ap_vld,
        d_9_load_out => grp_winograd_Pipeline_read_d_fu_250_d_9_load_out,
        d_9_load_out_ap_vld => grp_winograd_Pipeline_read_d_fu_250_d_9_load_out_ap_vld,
        d_10_load_out => grp_winograd_Pipeline_read_d_fu_250_d_10_load_out,
        d_10_load_out_ap_vld => grp_winograd_Pipeline_read_d_fu_250_d_10_load_out_ap_vld,
        d_11_load_out => grp_winograd_Pipeline_read_d_fu_250_d_11_load_out,
        d_11_load_out_ap_vld => grp_winograd_Pipeline_read_d_fu_250_d_11_load_out_ap_vld);

    grp_winograd_Pipeline_compute_Y_fu_269 : component winograd_winograd_Pipeline_compute_Y
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_winograd_Pipeline_compute_Y_fu_269_ap_start,
        ap_done => grp_winograd_Pipeline_compute_Y_fu_269_ap_done,
        ap_idle => grp_winograd_Pipeline_compute_Y_fu_269_ap_idle,
        ap_ready => grp_winograd_Pipeline_compute_Y_fu_269_ap_ready,
        sub7 => reg_331,
        add10 => reg_342,
        sub5 => reg_370,
        add8 => reg_323,
        p_out => grp_winograd_Pipeline_compute_Y_fu_269_p_out,
        p_out_ap_vld => grp_winograd_Pipeline_compute_Y_fu_269_p_out_ap_vld,
        p_out1 => grp_winograd_Pipeline_compute_Y_fu_269_p_out1,
        p_out1_ap_vld => grp_winograd_Pipeline_compute_Y_fu_269_p_out1_ap_vld,
        p_out2 => grp_winograd_Pipeline_compute_Y_fu_269_p_out2,
        p_out2_ap_vld => grp_winograd_Pipeline_compute_Y_fu_269_p_out2_ap_vld,
        p_out3 => grp_winograd_Pipeline_compute_Y_fu_269_p_out3,
        p_out3_ap_vld => grp_winograd_Pipeline_compute_Y_fu_269_p_out3_ap_vld);

    CTRL_s_axi_U : component winograd_CTRL_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_AWVALID,
        AWREADY => s_axi_CTRL_AWREADY,
        AWADDR => s_axi_CTRL_AWADDR,
        WVALID => s_axi_CTRL_WVALID,
        WREADY => s_axi_CTRL_WREADY,
        WDATA => s_axi_CTRL_WDATA,
        WSTRB => s_axi_CTRL_WSTRB,
        ARVALID => s_axi_CTRL_ARVALID,
        ARREADY => s_axi_CTRL_ARREADY,
        ARADDR => s_axi_CTRL_ARADDR,
        RVALID => s_axi_CTRL_RVALID,
        RREADY => s_axi_CTRL_RREADY,
        RDATA => s_axi_CTRL_RDATA,
        RRESP => s_axi_CTRL_RRESP,
        BVALID => s_axi_CTRL_BVALID,
        BREADY => s_axi_CTRL_BREADY,
        BRESP => s_axi_CTRL_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        in_g => in_g,
        in_d => in_d,
        out_y => out_y,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    gmem_m_axi_U : component winograd_gmem_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_CACHE_VALUE,
        CH0_NUM_READ_OUTSTANDING => 16,
        CH0_NUM_WRITE_OUTSTANDING => 16,
        CH0_USER_RFIFONUM_WIDTH => 9,
        CH0_USER_DW => 32,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem_AWVALID,
        AWREADY => m_axi_gmem_AWREADY,
        AWADDR => m_axi_gmem_AWADDR,
        AWID => m_axi_gmem_AWID,
        AWLEN => m_axi_gmem_AWLEN,
        AWSIZE => m_axi_gmem_AWSIZE,
        AWBURST => m_axi_gmem_AWBURST,
        AWLOCK => m_axi_gmem_AWLOCK,
        AWCACHE => m_axi_gmem_AWCACHE,
        AWPROT => m_axi_gmem_AWPROT,
        AWQOS => m_axi_gmem_AWQOS,
        AWREGION => m_axi_gmem_AWREGION,
        AWUSER => m_axi_gmem_AWUSER,
        WVALID => m_axi_gmem_WVALID,
        WREADY => m_axi_gmem_WREADY,
        WDATA => m_axi_gmem_WDATA,
        WSTRB => m_axi_gmem_WSTRB,
        WLAST => m_axi_gmem_WLAST,
        WID => m_axi_gmem_WID,
        WUSER => m_axi_gmem_WUSER,
        ARVALID => m_axi_gmem_ARVALID,
        ARREADY => m_axi_gmem_ARREADY,
        ARADDR => m_axi_gmem_ARADDR,
        ARID => m_axi_gmem_ARID,
        ARLEN => m_axi_gmem_ARLEN,
        ARSIZE => m_axi_gmem_ARSIZE,
        ARBURST => m_axi_gmem_ARBURST,
        ARLOCK => m_axi_gmem_ARLOCK,
        ARCACHE => m_axi_gmem_ARCACHE,
        ARPROT => m_axi_gmem_ARPROT,
        ARQOS => m_axi_gmem_ARQOS,
        ARREGION => m_axi_gmem_ARREGION,
        ARUSER => m_axi_gmem_ARUSER,
        RVALID => m_axi_gmem_RVALID,
        RREADY => m_axi_gmem_RREADY,
        RDATA => m_axi_gmem_RDATA,
        RLAST => m_axi_gmem_RLAST,
        RID => m_axi_gmem_RID,
        RUSER => m_axi_gmem_RUSER,
        RRESP => m_axi_gmem_RRESP,
        BVALID => m_axi_gmem_BVALID,
        BREADY => m_axi_gmem_BREADY,
        BRESP => m_axi_gmem_BRESP,
        BID => m_axi_gmem_BID,
        BUSER => m_axi_gmem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => gmem_0_ARVALID,
        I_CH0_ARREADY => gmem_0_ARREADY,
        I_CH0_ARADDR => gmem_0_ARADDR,
        I_CH0_ARLEN => gmem_0_ARLEN,
        I_CH0_RVALID => gmem_0_RVALID,
        I_CH0_RREADY => gmem_0_RREADY,
        I_CH0_RDATA => gmem_0_RDATA,
        I_CH0_RFIFONUM => gmem_0_RFIFONUM,
        I_CH0_AWVALID => gmem_0_AWVALID,
        I_CH0_AWREADY => gmem_0_AWREADY,
        I_CH0_AWADDR => gmem_addr_2_reg_826,
        I_CH0_AWLEN => gmem_0_AWLEN,
        I_CH0_WVALID => gmem_0_WVALID,
        I_CH0_WREADY => gmem_0_WREADY,
        I_CH0_WDATA => gmem_0_WDATA,
        I_CH0_WSTRB => ap_const_lv4_F,
        I_CH0_BVALID => gmem_0_BVALID,
        I_CH0_BREADY => gmem_0_BREADY);

    faddfsub_32ns_32ns_32_5_full_dsp_1_U34 : component winograd_faddfsub_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_281_p0,
        din1 => grp_fu_281_p1,
        opcode => grp_fu_281_opcode,
        ce => grp_fu_281_ce,
        dout => grp_fu_281_p2);

    faddfsub_32ns_32ns_32_5_full_dsp_1_U35 : component winograd_faddfsub_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_285_p0,
        din1 => grp_fu_285_p1,
        opcode => grp_fu_285_opcode,
        ce => grp_fu_285_ce,
        dout => grp_fu_285_p2);

    faddfsub_32ns_32ns_32_5_full_dsp_1_U36 : component winograd_faddfsub_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_289_p0,
        din1 => grp_fu_289_p1,
        opcode => grp_fu_289_opcode,
        ce => grp_fu_289_ce,
        dout => grp_fu_289_p2);

    faddfsub_32ns_32ns_32_5_full_dsp_1_U37 : component winograd_faddfsub_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_293_p0,
        din1 => grp_fu_293_p1,
        opcode => grp_fu_293_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_293_p2);

    fsub_32ns_32ns_32_5_full_dsp_1_U38 : component winograd_fsub_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_297_p0,
        din1 => grp_fu_297_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_297_p2);

    fadd_32ns_32ns_32_5_full_dsp_1_U39 : component winograd_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_winograd_Pipeline_read_d_fu_250_d_6_load_out,
        din1 => grp_winograd_Pipeline_read_d_fu_250_d_10_load_out,
        ce => ap_const_logic_1,
        dout => grp_fu_301_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U40 : component winograd_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_308_p0,
        din1 => grp_fu_308_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_308_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U41 : component winograd_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_313_p0,
        din1 => grp_fu_313_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_313_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U42 : component winograd_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_318_p0,
        din1 => grp_fu_318_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_318_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_winograd_Pipeline_compute_Y_fu_269_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_winograd_Pipeline_compute_Y_fu_269_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
                    grp_winograd_Pipeline_compute_Y_fu_269_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_winograd_Pipeline_compute_Y_fu_269_ap_ready = ap_const_logic_1)) then 
                    grp_winograd_Pipeline_compute_Y_fu_269_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_winograd_Pipeline_read_d_fu_250_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_winograd_Pipeline_read_d_fu_250_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state20) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                    grp_winograd_Pipeline_read_d_fu_250_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_winograd_Pipeline_read_d_fu_250_ap_ready = ap_const_logic_1)) then 
                    grp_winograd_Pipeline_read_d_fu_250_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_winograd_Pipeline_read_g_fu_234_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_winograd_Pipeline_read_g_fu_234_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state10) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    grp_winograd_Pipeline_read_g_fu_234_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_winograd_Pipeline_read_g_fu_234_ap_ready = ap_const_logic_1)) then 
                    grp_winograd_Pipeline_read_g_fu_234_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                add170_2_reg_909 <= grp_fu_301_p2;
                sub160_2_reg_903 <= grp_fu_297_p2;
                sub1_reg_897 <= grp_fu_281_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                add230_1_reg_933 <= grp_fu_297_p2;
                sub209_1_reg_928 <= grp_fu_293_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                gmem_addr_2_reg_826 <= sext_ln127_fu_444_p1;
                trunc_ln1_reg_820 <= in_d(63 downto 2);
                trunc_ln_reg_814 <= in_g(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                mul266_1_reg_938 <= grp_fu_318_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                mul_1_2_reg_916 <= grp_fu_308_p2;
                sub131_1_reg_923 <= grp_fu_293_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state16) or ((grp_winograd_Pipeline_read_d_fu_250_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21)))) then
                reg_323 <= grp_fu_281_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state16) or ((grp_winograd_Pipeline_read_d_fu_250_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21)))) then
                reg_331 <= grp_fu_285_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state34) or ((grp_winograd_Pipeline_read_d_fu_250_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21)))) then
                reg_342 <= grp_fu_289_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state25))) then
                reg_351 <= grp_fu_308_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state25))) then
                reg_361 <= grp_fu_313_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state44))) then
                reg_370 <= grp_fu_281_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state48))) then
                reg_376 <= grp_fu_293_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state30))) then
                reg_383 <= grp_fu_285_p2;
                reg_389 <= grp_fu_289_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state34))) then
                reg_395 <= grp_fu_308_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state39))) then
                reg_401 <= grp_fu_313_p2;
                reg_408 <= grp_fu_318_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state12, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state59, ap_CS_fsm_state64, ap_CS_fsm_state21, grp_winograd_Pipeline_read_d_fu_250_ap_done, grp_winograd_Pipeline_read_g_fu_234_ap_done, grp_winograd_Pipeline_compute_Y_fu_269_ap_done, gmem_0_AWREADY, gmem_0_WREADY, gmem_0_ARREADY, gmem_0_BVALID, ap_CS_fsm_state11, ap_CS_fsm_state54)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((gmem_0_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((grp_winograd_Pipeline_read_g_fu_234_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (((gmem_0_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((grp_winograd_Pipeline_read_d_fu_250_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                if (((grp_winograd_Pipeline_compute_Y_fu_269_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state55 => 
                if (((gmem_0_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state55))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state56 => 
                if (((gmem_0_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state56))) then
                    ap_NS_fsm <= ap_ST_fsm_state57;
                else
                    ap_NS_fsm <= ap_ST_fsm_state56;
                end if;
            when ap_ST_fsm_state57 => 
                if (((gmem_0_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then
                    ap_NS_fsm <= ap_ST_fsm_state58;
                else
                    ap_NS_fsm <= ap_ST_fsm_state57;
                end if;
            when ap_ST_fsm_state58 => 
                if (((gmem_0_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state58))) then
                    ap_NS_fsm <= ap_ST_fsm_state59;
                else
                    ap_NS_fsm <= ap_ST_fsm_state58;
                end if;
            when ap_ST_fsm_state59 => 
                if (((gmem_0_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state59))) then
                    ap_NS_fsm <= ap_ST_fsm_state60;
                else
                    ap_NS_fsm <= ap_ST_fsm_state59;
                end if;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                if (((gmem_0_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state64;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_NS_fsm_state10 <= ap_NS_fsm(9);
    ap_NS_fsm_state20 <= ap_NS_fsm(19);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(grp_winograd_Pipeline_read_g_fu_234_ap_done)
    begin
        if ((grp_winograd_Pipeline_read_g_fu_234_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state12_blk_assign_proc : process(gmem_0_ARREADY)
    begin
        if ((gmem_0_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;

    ap_ST_fsm_state21_blk_assign_proc : process(grp_winograd_Pipeline_read_d_fu_250_ap_done)
    begin
        if ((grp_winograd_Pipeline_read_d_fu_250_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state21_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state21_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(gmem_0_ARREADY)
    begin
        if ((gmem_0_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;

    ap_ST_fsm_state54_blk_assign_proc : process(grp_winograd_Pipeline_compute_Y_fu_269_ap_done)
    begin
        if ((grp_winograd_Pipeline_compute_Y_fu_269_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state54_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state54_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state55_blk_assign_proc : process(gmem_0_AWREADY)
    begin
        if ((gmem_0_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state55_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state55_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state56_blk_assign_proc : process(gmem_0_WREADY)
    begin
        if ((gmem_0_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state56_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state56_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state57_blk_assign_proc : process(gmem_0_WREADY)
    begin
        if ((gmem_0_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state57_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state57_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state58_blk_assign_proc : process(gmem_0_WREADY)
    begin
        if ((gmem_0_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state58_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state58_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state59_blk_assign_proc : process(gmem_0_WREADY)
    begin
        if ((gmem_0_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state59_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state59_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state60_blk <= ap_const_logic_0;
    ap_ST_fsm_state61_blk <= ap_const_logic_0;
    ap_ST_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_fsm_state63_blk <= ap_const_logic_0;

    ap_ST_fsm_state64_blk_assign_proc : process(gmem_0_BVALID)
    begin
        if ((gmem_0_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state64_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state64_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state64, gmem_0_BVALID)
    begin
        if (((gmem_0_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state64, gmem_0_BVALID)
    begin
        if (((gmem_0_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    bit_sel1_fu_566_p3 <= bitcast_ln93_fu_562_p1(31 downto 31);
    bit_sel_fu_601_p3 <= bitcast_ln93_2_fu_597_p1(31 downto 31);
    bitcast_ln127_1_fu_643_p1 <= grp_winograd_Pipeline_compute_Y_fu_269_p_out2;
    bitcast_ln127_2_fu_651_p1 <= grp_winograd_Pipeline_compute_Y_fu_269_p_out1;
    bitcast_ln127_3_fu_659_p1 <= grp_winograd_Pipeline_compute_Y_fu_269_p_out;
    bitcast_ln127_fu_635_p1 <= grp_winograd_Pipeline_compute_Y_fu_269_p_out3;
    bitcast_ln93_1_fu_592_p1 <= xor_ln_fu_584_p3;
    bitcast_ln93_2_fu_597_p1 <= reg_331;
    bitcast_ln93_3_fu_627_p1 <= xor_ln93_1_fu_619_p3;
    bitcast_ln93_fu_562_p1 <= reg_370;

    gmem_0_ARADDR_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state12, ap_CS_fsm_state21, grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARADDR, grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARADDR, gmem_0_ARREADY, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state20, sext_ln34_fu_454_p1, sext_ln45_fu_480_p1)
    begin
        if (((gmem_0_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            gmem_0_ARADDR <= sext_ln45_fu_480_p1;
        elsif (((gmem_0_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem_0_ARADDR <= sext_ln34_fu_454_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem_0_ARADDR <= grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_0_ARADDR <= grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARADDR;
        else 
            gmem_0_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_0_ARLEN_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state12, ap_CS_fsm_state21, grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARLEN, grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARLEN, gmem_0_ARREADY, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state20)
    begin
        if (((gmem_0_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            gmem_0_ARLEN <= ap_const_lv64_10(32 - 1 downto 0);
        elsif (((gmem_0_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem_0_ARLEN <= ap_const_lv64_9(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem_0_ARLEN <= grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_0_ARLEN <= grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARLEN;
        else 
            gmem_0_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_0_ARVALID_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state12, ap_CS_fsm_state21, grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARVALID, grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARVALID, gmem_0_ARREADY, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state20)
    begin
        if ((((gmem_0_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((gmem_0_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            gmem_0_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem_0_ARVALID <= grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_0_ARVALID <= grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_ARVALID;
        else 
            gmem_0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    gmem_0_AWLEN <= ap_const_lv64_4(32 - 1 downto 0);

    gmem_0_AWVALID_assign_proc : process(ap_CS_fsm_state55, gmem_0_AWREADY)
    begin
        if (((gmem_0_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            gmem_0_AWVALID <= ap_const_logic_1;
        else 
            gmem_0_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_0_BREADY_assign_proc : process(ap_CS_fsm_state64, gmem_0_BVALID)
    begin
        if (((gmem_0_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then 
            gmem_0_BREADY <= ap_const_logic_1;
        else 
            gmem_0_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_0_RREADY_assign_proc : process(ap_CS_fsm_state21, grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_RREADY, grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_RREADY, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem_0_RREADY <= grp_winograd_Pipeline_read_d_fu_250_m_axi_gmem_0_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_0_RREADY <= grp_winograd_Pipeline_read_g_fu_234_m_axi_gmem_0_RREADY;
        else 
            gmem_0_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_0_WDATA_assign_proc : process(ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state59, bitcast_ln127_fu_635_p1, bitcast_ln127_1_fu_643_p1, bitcast_ln127_2_fu_651_p1, bitcast_ln127_3_fu_659_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            gmem_0_WDATA <= bitcast_ln127_3_fu_659_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            gmem_0_WDATA <= bitcast_ln127_2_fu_651_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            gmem_0_WDATA <= bitcast_ln127_1_fu_643_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            gmem_0_WDATA <= bitcast_ln127_fu_635_p1;
        else 
            gmem_0_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_0_WVALID_assign_proc : process(ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state59, gmem_0_WREADY)
    begin
        if ((((gmem_0_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state59)) or ((gmem_0_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state58)) or ((gmem_0_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state57)) or ((gmem_0_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state56)))) then 
            gmem_0_WVALID <= ap_const_logic_1;
        else 
            gmem_0_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_blk_n_AR_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state2, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_AW_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            gmem_blk_n_AW <= m_axi_gmem_AWREADY;
        else 
            gmem_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_B_assign_proc : process(m_axi_gmem_BVALID, ap_CS_fsm_state64)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            gmem_blk_n_B <= m_axi_gmem_BVALID;
        else 
            gmem_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_W_assign_proc : process(m_axi_gmem_WREADY, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state59)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state56))) then 
            gmem_blk_n_W <= m_axi_gmem_WREADY;
        else 
            gmem_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_281_ce_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state12, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state59, ap_CS_fsm_state64, ap_CS_fsm_state21, grp_winograd_Pipeline_read_d_fu_250_ap_done, gmem_0_ARREADY, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state54, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state60, ap_CS_fsm_state61, ap_CS_fsm_state62, ap_CS_fsm_state63)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((gmem_0_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((grp_winograd_Pipeline_read_d_fu_250_ap_done 
    = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state21)))) then 
            grp_fu_281_ce <= ap_const_logic_0;
        else 
            grp_fu_281_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_281_opcode_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state21, ap_CS_fsm_state25, ap_CS_fsm_state30, ap_CS_fsm_state39, ap_CS_fsm_state44, ap_CS_fsm_state26, ap_CS_fsm_state35, ap_CS_fsm_state40, ap_CS_fsm_state22, ap_CS_fsm_state17, ap_CS_fsm_state31, ap_CS_fsm_state49)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            grp_fu_281_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            grp_fu_281_opcode <= ap_const_lv2_0;
        else 
            grp_fu_281_opcode <= "XX";
        end if; 
    end process;


    grp_fu_281_p0_assign_proc : process(ap_CS_fsm_state12, reg_323, ap_CS_fsm_state21, ap_CS_fsm_state25, ap_CS_fsm_state30, ap_CS_fsm_state39, reg_331, ap_CS_fsm_state44, reg_342, reg_351, ap_CS_fsm_state26, ap_CS_fsm_state35, reg_383, sub1_reg_897, grp_winograd_Pipeline_read_g_fu_234_g_load_out, grp_winograd_Pipeline_read_d_fu_250_d_load_out, grp_winograd_Pipeline_read_d_fu_250_d_3_load_out, ap_CS_fsm_state40, ap_CS_fsm_state22, ap_CS_fsm_state17, ap_CS_fsm_state31, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            grp_fu_281_p0 <= reg_331;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            grp_fu_281_p0 <= grp_winograd_Pipeline_read_d_fu_250_d_3_load_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_fu_281_p0 <= reg_351;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            grp_fu_281_p0 <= reg_383;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_fu_281_p0 <= sub1_reg_897;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_fu_281_p0 <= grp_winograd_Pipeline_read_d_fu_250_d_load_out;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            grp_fu_281_p0 <= reg_342;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state44))) then 
            grp_fu_281_p0 <= reg_323;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            grp_fu_281_p0 <= grp_winograd_Pipeline_read_g_fu_234_g_load_out;
        else 
            grp_fu_281_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_281_p1_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state21, ap_CS_fsm_state25, ap_CS_fsm_state30, ap_CS_fsm_state39, ap_CS_fsm_state44, reg_351, reg_361, ap_CS_fsm_state26, ap_CS_fsm_state35, sub160_2_reg_903, grp_winograd_Pipeline_read_g_fu_234_g_1_load_out, grp_winograd_Pipeline_read_g_fu_234_g_2_load_out, grp_winograd_Pipeline_read_g_fu_234_g_3_load_out, grp_winograd_Pipeline_read_g_fu_234_g_6_load_out, grp_winograd_Pipeline_read_g_fu_234_g_8_load_out, grp_winograd_Pipeline_read_d_fu_250_d_8_load_out, grp_winograd_Pipeline_read_d_fu_250_d_11_load_out, ap_CS_fsm_state40, ap_CS_fsm_state22, ap_CS_fsm_state17, ap_CS_fsm_state31, ap_CS_fsm_state49)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state44))) then 
            grp_fu_281_p1 <= reg_351;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            grp_fu_281_p1 <= grp_winograd_Pipeline_read_d_fu_250_d_11_load_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_fu_281_p1 <= reg_361;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            grp_fu_281_p1 <= sub160_2_reg_903;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            grp_fu_281_p1 <= grp_winograd_Pipeline_read_g_fu_234_g_6_load_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_fu_281_p1 <= grp_winograd_Pipeline_read_d_fu_250_d_8_load_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            grp_fu_281_p1 <= grp_winograd_Pipeline_read_g_fu_234_g_8_load_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_281_p1 <= grp_winograd_Pipeline_read_g_fu_234_g_3_load_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_281_p1 <= grp_winograd_Pipeline_read_g_fu_234_g_2_load_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_281_p1 <= grp_winograd_Pipeline_read_g_fu_234_g_1_load_out;
        else 
            grp_fu_281_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_285_ce_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state12, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state59, ap_CS_fsm_state64, ap_CS_fsm_state21, grp_winograd_Pipeline_read_d_fu_250_ap_done, gmem_0_ARREADY, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state54, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state60, ap_CS_fsm_state61, ap_CS_fsm_state62, ap_CS_fsm_state63)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) 
    or ((gmem_0_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((grp_winograd_Pipeline_read_d_fu_250_ap_done = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state21)))) then 
            grp_fu_285_ce <= ap_const_logic_0;
        else 
            grp_fu_285_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_285_opcode_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state25, ap_CS_fsm_state30, ap_CS_fsm_state44, ap_CS_fsm_state26, ap_CS_fsm_state35, ap_CS_fsm_state40, ap_CS_fsm_state17, ap_CS_fsm_state31, ap_CS_fsm_state49)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state44))) then 
            grp_fu_285_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            grp_fu_285_opcode <= ap_const_lv2_0;
        else 
            grp_fu_285_opcode <= "XX";
        end if; 
    end process;


    grp_fu_285_p0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state25, ap_CS_fsm_state30, reg_331, ap_CS_fsm_state44, reg_342, reg_361, ap_CS_fsm_state26, ap_CS_fsm_state35, reg_376, reg_389, grp_winograd_Pipeline_read_g_fu_234_g_load_out, grp_winograd_Pipeline_read_g_fu_234_g_3_load_out, grp_winograd_Pipeline_read_d_fu_250_d_4_load_out, grp_winograd_Pipeline_read_d_fu_250_d_7_load_out, ap_CS_fsm_state40, ap_CS_fsm_state17, ap_CS_fsm_state31, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            grp_fu_285_p0 <= reg_361;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            grp_fu_285_p0 <= grp_winograd_Pipeline_read_d_fu_250_d_7_load_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_fu_285_p0 <= reg_376;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            grp_fu_285_p0 <= reg_389;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            grp_fu_285_p0 <= reg_342;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_285_p0 <= grp_winograd_Pipeline_read_g_fu_234_g_load_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_fu_285_p0 <= grp_winograd_Pipeline_read_d_fu_250_d_4_load_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_285_p0 <= reg_331;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_285_p0 <= grp_winograd_Pipeline_read_g_fu_234_g_3_load_out;
        else 
            grp_fu_285_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_285_p1_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state25, ap_CS_fsm_state30, ap_CS_fsm_state44, reg_351, reg_361, ap_CS_fsm_state26, ap_CS_fsm_state35, sub160_2_reg_903, add170_2_reg_909, mul_1_2_reg_916, grp_winograd_Pipeline_read_g_fu_234_g_3_load_out, grp_winograd_Pipeline_read_g_fu_234_g_4_load_out, grp_winograd_Pipeline_read_g_fu_234_g_5_load_out, grp_winograd_Pipeline_read_d_fu_250_d_8_load_out, grp_winograd_Pipeline_read_d_fu_250_d_11_load_out, ap_CS_fsm_state40, ap_CS_fsm_state17, ap_CS_fsm_state31, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            grp_fu_285_p1 <= reg_361;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            grp_fu_285_p1 <= reg_351;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            grp_fu_285_p1 <= grp_winograd_Pipeline_read_d_fu_250_d_11_load_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_fu_285_p1 <= add170_2_reg_909;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            grp_fu_285_p1 <= mul_1_2_reg_916;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_fu_285_p1 <= sub160_2_reg_903;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_285_p1 <= grp_winograd_Pipeline_read_g_fu_234_g_3_load_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_fu_285_p1 <= grp_winograd_Pipeline_read_d_fu_250_d_8_load_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_285_p1 <= grp_winograd_Pipeline_read_g_fu_234_g_5_load_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_285_p1 <= grp_winograd_Pipeline_read_g_fu_234_g_4_load_out;
        else 
            grp_fu_285_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_289_ce_assign_proc : process(ap_CS_fsm_state21, grp_winograd_Pipeline_read_d_fu_250_ap_done, ap_CS_fsm_state25, ap_CS_fsm_state30, ap_CS_fsm_state34, ap_CS_fsm_state39, ap_CS_fsm_state48, ap_CS_fsm_state29, ap_CS_fsm_state44, ap_CS_fsm_state53, ap_CS_fsm_state38, ap_CS_fsm_state26, ap_CS_fsm_state35, ap_CS_fsm_state45, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state17, ap_CS_fsm_state31, ap_CS_fsm_state49, ap_CS_fsm_state27, ap_CS_fsm_state36, ap_CS_fsm_state18, ap_CS_fsm_state28, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state37, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 
    = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((grp_winograd_Pipeline_read_d_fu_250_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21)))) then 
            grp_fu_289_ce <= ap_const_logic_1;
        else 
            grp_fu_289_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_289_opcode_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state30, ap_CS_fsm_state44, ap_CS_fsm_state26, ap_CS_fsm_state35, ap_CS_fsm_state17, ap_CS_fsm_state31, ap_CS_fsm_state49)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            grp_fu_289_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            grp_fu_289_opcode <= ap_const_lv2_0;
        else 
            grp_fu_289_opcode <= "XX";
        end if; 
    end process;


    grp_fu_289_p0_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state30, ap_CS_fsm_state44, reg_342, reg_351, ap_CS_fsm_state26, ap_CS_fsm_state35, reg_376, reg_401, sub131_1_reg_923, add230_1_reg_933, grp_winograd_Pipeline_read_g_fu_234_g_6_load_out, grp_winograd_Pipeline_read_d_fu_250_d_1_load_out, ap_CS_fsm_state17, ap_CS_fsm_state31, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            grp_fu_289_p0 <= reg_376;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            grp_fu_289_p0 <= reg_401;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_fu_289_p0 <= add230_1_reg_933;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            grp_fu_289_p0 <= sub131_1_reg_923;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_fu_289_p0 <= reg_342;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_289_p0 <= reg_351;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_fu_289_p0 <= grp_winograd_Pipeline_read_d_fu_250_d_1_load_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_289_p0 <= grp_winograd_Pipeline_read_g_fu_234_g_6_load_out;
        else 
            grp_fu_289_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_289_p1_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state30, ap_CS_fsm_state44, reg_361, ap_CS_fsm_state26, ap_CS_fsm_state35, reg_408, sub1_reg_897, add170_2_reg_909, mul_1_2_reg_916, grp_winograd_Pipeline_read_g_fu_234_g_7_load_out, grp_winograd_Pipeline_read_d_fu_250_d_9_load_out, ap_CS_fsm_state17, ap_CS_fsm_state31, ap_CS_fsm_state49)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state44))) then 
            grp_fu_289_p1 <= reg_408;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_fu_289_p1 <= add170_2_reg_909;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            grp_fu_289_p1 <= mul_1_2_reg_916;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_fu_289_p1 <= sub1_reg_897;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_289_p1 <= reg_361;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_fu_289_p1 <= grp_winograd_Pipeline_read_d_fu_250_d_9_load_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_289_p1 <= grp_winograd_Pipeline_read_g_fu_234_g_7_load_out;
        else 
            grp_fu_289_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_293_opcode_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state30, ap_CS_fsm_state44, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            grp_fu_293_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            grp_fu_293_opcode <= ap_const_lv2_0;
        else 
            grp_fu_293_opcode <= "XX";
        end if; 
    end process;


    grp_fu_293_p0_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state30, reg_331, ap_CS_fsm_state44, reg_351, ap_CS_fsm_state26, mul266_1_reg_938, grp_winograd_Pipeline_read_d_fu_250_d_5_load_out)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            grp_fu_293_p0 <= mul266_1_reg_938;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_fu_293_p0 <= reg_331;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_293_p0 <= reg_351;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_fu_293_p0 <= grp_winograd_Pipeline_read_d_fu_250_d_5_load_out;
        else 
            grp_fu_293_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_293_p1_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state30, ap_CS_fsm_state44, reg_361, ap_CS_fsm_state26, reg_401, add170_2_reg_909, grp_winograd_Pipeline_read_d_fu_250_d_9_load_out)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            grp_fu_293_p1 <= reg_401;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_fu_293_p1 <= add170_2_reg_909;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_293_p1 <= reg_361;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_fu_293_p1 <= grp_winograd_Pipeline_read_d_fu_250_d_9_load_out;
        else 
            grp_fu_293_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_297_p0_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state30, reg_376, grp_winograd_Pipeline_read_d_fu_250_d_2_load_out)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_fu_297_p0 <= reg_376;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_fu_297_p0 <= grp_winograd_Pipeline_read_d_fu_250_d_2_load_out;
        else 
            grp_fu_297_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_297_p1_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state30, reg_331, grp_winograd_Pipeline_read_d_fu_250_d_10_load_out)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_fu_297_p1 <= reg_331;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_fu_297_p1 <= grp_winograd_Pipeline_read_d_fu_250_d_10_load_out;
        else 
            grp_fu_297_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_308_p0_assign_proc : process(reg_323, reg_370, ap_CS_fsm_state35, reg_395, ap_CS_fsm_state45, grp_winograd_Pipeline_read_g_fu_234_g_load_out, grp_winograd_Pipeline_read_g_fu_234_g_6_load_out, ap_CS_fsm_state40, ap_CS_fsm_state22, ap_CS_fsm_state31, ap_CS_fsm_state27, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_fu_308_p0 <= grp_winograd_Pipeline_read_g_fu_234_g_6_load_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            grp_fu_308_p0 <= reg_395;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_fu_308_p0 <= grp_winograd_Pipeline_read_g_fu_234_g_load_out;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            grp_fu_308_p0 <= reg_370;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            grp_fu_308_p0 <= reg_323;
        else 
            grp_fu_308_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_308_p1_assign_proc : process(reg_323, ap_CS_fsm_state35, bitcast_ln93_1_fu_592_p1, ap_CS_fsm_state45, ap_CS_fsm_state40, ap_CS_fsm_state22, ap_CS_fsm_state31, ap_CS_fsm_state27, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_fu_308_p1 <= bitcast_ln93_1_fu_592_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            grp_fu_308_p1 <= reg_323;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            grp_fu_308_p1 <= ap_const_lv32_3F000000;
        else 
            grp_fu_308_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_313_p0_assign_proc : process(reg_331, ap_CS_fsm_state35, reg_383, reg_395, reg_401, mul_1_2_reg_916, ap_CS_fsm_state45, ap_CS_fsm_state40, ap_CS_fsm_state22, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_fu_313_p0 <= mul_1_2_reg_916;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            grp_fu_313_p0 <= reg_401;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_313_p0 <= reg_383;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_fu_313_p0 <= reg_395;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            grp_fu_313_p0 <= reg_331;
        else 
            grp_fu_313_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_313_p1_assign_proc : process(reg_331, ap_CS_fsm_state35, ap_CS_fsm_state45, bitcast_ln93_3_fu_627_p1, ap_CS_fsm_state40, ap_CS_fsm_state22, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_fu_313_p1 <= bitcast_ln93_3_fu_627_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            grp_fu_313_p1 <= reg_331;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            grp_fu_313_p1 <= ap_const_lv32_3F000000;
        else 
            grp_fu_313_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_318_p0_assign_proc : process(reg_351, ap_CS_fsm_state35, reg_389, reg_408, ap_CS_fsm_state40, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            grp_fu_318_p0 <= reg_408;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_318_p0 <= reg_389;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_fu_318_p0 <= reg_351;
        else 
            grp_fu_318_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_318_p1_assign_proc : process(reg_342, ap_CS_fsm_state35, sub209_1_reg_928, ap_CS_fsm_state40, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            grp_fu_318_p1 <= reg_342;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_318_p1 <= ap_const_lv32_3F000000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_fu_318_p1 <= sub209_1_reg_928;
        else 
            grp_fu_318_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_winograd_Pipeline_compute_Y_fu_269_ap_start <= grp_winograd_Pipeline_compute_Y_fu_269_ap_start_reg;
    grp_winograd_Pipeline_read_d_fu_250_ap_start <= grp_winograd_Pipeline_read_d_fu_250_ap_start_reg;
    grp_winograd_Pipeline_read_g_fu_234_ap_start <= grp_winograd_Pipeline_read_g_fu_234_ap_start_reg;
        sext_ln127_fu_444_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln2_fu_434_p4),64));

        sext_ln34_fu_454_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_reg_814),64));

        sext_ln45_fu_480_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_reg_820),64));

    trunc_ln2_fu_434_p4 <= out_y(63 downto 2);
    trunc_ln93_1_fu_615_p1 <= bitcast_ln93_2_fu_597_p1(31 - 1 downto 0);
    trunc_ln93_fu_580_p1 <= bitcast_ln93_fu_562_p1(31 - 1 downto 0);
    xor_ln93_1_fu_619_p3 <= (xor_ln93_fu_609_p2 & trunc_ln93_1_fu_615_p1);
    xor_ln93_2_fu_574_p2 <= (bit_sel1_fu_566_p3 xor ap_const_lv1_1);
    xor_ln93_fu_609_p2 <= (bit_sel_fu_601_p3 xor ap_const_lv1_1);
    xor_ln_fu_584_p3 <= (xor_ln93_2_fu_574_p2 & trunc_ln93_fu_580_p1);
end behav;
